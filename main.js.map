{"version":3,"sources":["./src/app/requests/requests.component.ts","./src/app/requests/requests.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/covidsupport/covidsupport.component.ts","./src/app/covidsupport/covidsupport.component.html","./src/app/services/services.component.ts","./src/app/services/services.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/contribute/contribute.component.ts","./src/app/contribute/contribute.component.html","./src/app/app.module.ts","./src/app/material/material.module.ts","./src/app/emitters/emitters.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/askforhelp/askforhelp.component.ts","./src/app/askforhelp/askforhelp.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport * as StateData from '../districts.json';  \n\n\n@Component({\n  selector: 'app-requests',\n  templateUrl: './requests.component.html',\n  styleUrls: ['./requests.component.css']\n})\nexport class RequestsComponent implements OnInit {\n\n  constructor(private activatedRoute: ActivatedRoute , private api:ApiService) { }\n  order: any\n  reverse: any\n  requests: any\n\n  services: any\n  categories: any\n\n  service: any\n  category: any\n  verified: any\n\n  state: any\n  district:any\n  city:any\n  \n  states :any = (StateData as any).default\n\n  districts = new Array\n\n\n  ngOnInit(): void {\n    this.getRequests(); \n    this.getServices();\n    \n  }\n  getRequests = () => {\n    this.api.getAllRequests(this.service,this.category,this.verified,this.state,this.district,this.city).subscribe(\n      data => {\n        this.requests = data;\n        // console.log(data);\n      },\n      error => {\n        // console.log(\"error\");\n      }\n    );\n\n  }\n \n  getServices = () => {\n    this.api.getAllServices().subscribe(\n      data => {\n        this.services = data;\n        // console.log(data);\n      },\n      error => {\n        // console.log(\"error\");\n      }\n    );\n  }\n\n  onChangeService(service:any) {\n    if(service.value)\n    {\n      this.category = '';\n      this.categories=this.services[service.value].categories;\n      this.service = this.services[service.value].id;\n        \n    }\n    else{\n      this.service = '';\n      this.category = '';\n      this.categories = []\n    }\n    this.getRequests();\n  }\n\n  onChangeState(state:any) {\n    if(state.value)\n    {\n      this.district = ''\n      this.state = this.states[state.value].name;\n      this.districts = []\n      for(let i in this.states[state.value].districts)\n      {\n        this.districts.push(this.states[state.value].districts[i]);\n      }\n    }\n    else{\n      this.state = ''\n      this.district = ''\n      this.districts = []\n    }\n    this.getRequests();\n  }\n\n  onChangeDistrict(district:any) {\n   \n    this.district = district.value;\n    \n    this.getRequests();\n  }\n\n\n  \n  onChangeCategory(category:any) {\n    // if(service.value)\n    //   this.categories=this.categories[service.value].categories;\n    this.category = category.value;\n    // this.cityInfo=this.stateInfo[0].Cities;\n    // console.log(category.value);\n    this.getRequests();\n  }\n\n  \n\n  upvoteRequest = (request:any) => {\n    \n    this.api.upvoteRequest(request).subscribe(\n      data => {\n        // this.getMovies();\n      },\n      error => {\n        // console.log(\"error\");\n      }\n    );\n\n  }\n\n\n\n}\n","\n\n<div class=\"container bg-light shadow p-3\">\n    <button routerLink=\"/request_for_help\" class=\"w-100 btn btn-lg btn-success\">Request for a help</button>\n \n\n    <hr>\n    <h5 class=\"h4 text-danger mb-3 fw-normal text-center font-weight-bold\">All Requests</h5>\n\n\n\n \n\n    <div class=\"row d-flex justify-content-center\">\n   \n \n        <div class=\"col-12 col-md-4\">\n          <div class=\"form-group\"> \n            <select class=\"form-control\" (change)=\"onChangeService($event.target)\">\n              <option selected value=\"\">Select Service</option>\n              <option *ngFor=\"let service of services; let i = index\" value=\"{{i}}\">{{service.service}}</option>\n            </select>  \n          </div>\n        </div>\n  \n        <div class=\"col-12 col-md-4\" *ngIf=\"service\">\n          <div class=\"form-group\"> \n              <select class=\"form-control\" (change)=\"onChangeCategory($event.target)\">\n                <option selected value=\"\">Select Category</option>\n                <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.category}}</option>\n              </select>  \n          </div>\n        </div>\n    \n        <div class=\"col-12 col-md-4\">\n          <div class=\"form-group\">\n              <select class=\"form-control\" (change)=\"onChangeState($event.target)\">\n                <option selected value=\"\">Select State</option>\n                <option *ngFor=\"let state of states; let k = index\" value=\"{{k}}\">{{state.name}}</option>\n              </select>  \n          </div>\n        </div>\n        <div class=\"col-12 col-md-4\" *ngIf=\"state\">\n          <div class=\"form-group\">\n              <select class=\"form-control\" (change)=\"onChangeDistrict($event.target)\">\n                <option selected value=\"\">Select District</option>\n                <option *ngFor=\"let district of districts; let k = index\" value=\"{{district}}\">{{district}}</option>\n              </select>  \n          </div>\n        </div>     \n        \n        \n    \n    </div>    \n  \n  \n  \n  \n      <hr> \n      <div class=\"row cards \">\n        <div class=\"col-12 col-md-6 mb-3\" *ngFor=\"let request of requests\"  >\n          <div class=\"card card-large card-row-layout shadow-sm\">\n            <a routerLink=\"/Requests\" class=\"\">\n              <div class=\"card-body\">\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Posted by : \n                  </span>\n                  <span>\n                    {{request.posted_by_first_name}} \n                    {{request.posted_by_last_name}}\n                  </span>\n                </p>\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Service : \n                  </span>\n                  <span>\n                    {{request.this_service}}\n                  </span>\n                </p>\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Category : \n                  </span>\n                  <span>\n                    {{request.this_category}}\n                  </span>\n                  <span *ngIf=\"!request.category\">\n                    Not available\n                  </span>\n                </p>\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Address : \n                  </span>\n                  <span *ngIf=\"request.city\" class=\"pr-1\">\n                    {{request.city}}, \n                  </span> \n                  {{request.district}}, {{request.state}} \n                </p>\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Mobile No : \n                  </span>\n                  <span>\n                    {{request.contact}}\n                  </span>\n                </p>\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Updated : \n                  </span>\n                  <span>\n                    {{request.gap}}\n                  </span>\n                </p>\n                <p class=\"card-text h6 d-flex\">\n                  <span class=\"w-25 font-weight-bold\">\n                    Details : \n                  </span>\n                  <span>\n                    {{request.about}}\n                  </span>\n                </p>\n                \n  \n              </div>\n              <!-- <div class=\"card-footer d-flex justify-content-between align-items-center\" style=\"font-size: 14px;\">\n                <div>\n                  <span>Maintained by : {{request.maintained_by_first_name}} {{request.maintained_by_last_name}}</span>\n                  <button (click)=\"upvoteDonner(request)\" class=\"text-success\"><i class=\"mr-3 fa fa-hand-o-up\" style=\"font-size: 22px;cursor:pointer\"></i>{{request.upvote}}</button>\n                  <button class=\"text-danger\"><i class=\"mr-3 fa fa-hand-o-down\" style=\"font-size: 22px;cursor:pointer\"></i>{{request.upvote}}</button>\n                </div>\n                <div class=\"text-right\">\n                  <span *ngIf=\"request.verified\" class=\"text-success\">Verified</span>\n                  <span *ngIf=\"!request.verified\" class=\"text-danger\">Not verified</span>\n                </div>\n              </div> -->\n          </a>\n          </div>\n        </div>\n  \n        \n  \n  \n  \n      </div> \n  \n  </div>\n  ","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport Swal from 'sweetalert2';\nimport * as firebase from 'firebase/app';\nimport { ApiService } from '../api.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  form = new FormGroup({\n    username : new FormControl('', [Validators.required, Validators.pattern(\"[0-9 ]{10}\")]),\n    first_name : new FormControl('', [Validators.required, ]),\n    lsst_name : new FormControl('', [Validators.required, ]),\n    password : new FormControl('', [Validators.required, Validators.minLength(6) ]),\n    cpassword : new FormControl('', [Validators.required, ]),\n\n  });\n\n  form_verify = new FormGroup({\n    otp : new FormControl('',[Validators.required, Validators.pattern(\"[0-9]{6}\")])\n  });\n\n  windowRef: any;\n  otpSended= 0;\n  btn_txt = \"Send OTP\";\n  btn2_txt= \"Verify OTP\";\n  num = \"+91\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private api:ApiService,\n    public afAuth: AngularFireAuth, // Inject Firebase auth service\n  ) {  }\n\n  ngOnInit(): void {\n    this.windowRef = this.api.windowRef\n    this.windowRef.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container',{\n      'size': 'invisible',\n      'callback': (response) => {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        // ...\n      },\n      'expired-callback': () => {\n        // Response expired. Ask user to solve reCAPTCHA again.\n        // ...\n      }\n    })\n\n    this.windowRef.recaptchaVerifier.render()\n    \n  }\n\n  submit(): void {\n\n    const appVerifier = this.windowRef.recaptchaVerifier;\n    this.num = \"+91\"+this.form.controls.username.value;\n    this.btn_txt = \"Sending OTP...\";\n    this.otpSended = 1;\n    firebase.auth().signInWithPhoneNumber(this.num, appVerifier)\n      .then(result => {\n        this.windowRef.confirmationResult = result;\n        this.otpSended = 1;\n        this.btn_txt = \"Send OTP\";\n      })\n      .catch( error => {\n        //  console.log(error) \n          Swal.fire({\n            title: '',\n            text: 'Unusual activity detected from you. Try again later..!!',\n            icon: 'error',\n            // showConfirmButton: false,\n            // showCancelButton: true,\n            // confirmButtonText: 'Okey',\n            // cancelButtonText: 'No, keep it'\n          })\n         this.btn_txt = \"Send OTP\";\n        }\n      );\n\n  }\n\n  change_state() {\n    this.otpSended = (1 ^ this.otpSended);\n  }\n  // verifyLoginCode() {\n  //   this.btn2_txt = \"Validating...\";\n  //   this.windowRef.confirmationResult\n  //                 .confirm(this.verificationCode)\n  //                 .then( result => {\n  //     alert(2);\n  //     this.savedata();\n\n  //   })\n  //   .catch( error => console.log(error, \"Incorrect code entered?\"));\n  // }\n  verifyLoginCode() {\n    this.btn2_txt = \"Validating...\";\n    // this.verificationCode = ;\n    // alert(this.form_verify.controls.otp.value);\n    this.windowRef.confirmationResult.confirm(this.form_verify.controls.otp.value)\n    .then( result => {\n      // alert(2);\n      this.savedata();\n\n    })\n    .catch( error => {\n\n      Swal.fire({\n        title: 'Wrong OTP',\n        text: '',\n        icon: 'error',\n        // showConfirmButton: false,\n        // showCancelButton: true,\n        // confirmButtonText: 'Okey',\n        // cancelButtonText: 'No, keep it'\n      })\n\n      this.otpSended = (1 ^ this.otpSended);\n    });\n  }\n\n  savedata() {\n\n\n    this.http.post('https://django-backend-rest-001.herokuapp.com/auth/register', this.form.getRawValue())\n      .subscribe(\n        () => { \n\n          Swal.fire({\n            title: 'Registration Successfull.',\n            text: 'You Can Login Now.',\n            icon: 'success',\n            // showConfirmButton: false,\n            // showCancelButton: true,\n            // confirmButtonText: 'Okey',\n            // cancelButtonText: 'No, keep it'\n          })\n\n          this.router.navigate(['/login']);\n        },\n        err => {\n          Swal.fire({\n            title: '',\n            text: 'Your mobile number is already registered with us, please try again with another mobile number.',\n            icon: 'warning',\n            // showConfirmButton: false,\n            // showCancelButton: true,\n            // confirmButtonText: 'Okey',\n            // cancelButtonText: 'No, keep it'\n          })\n          this.otpSended = (1 ^ this.otpSended);\n        }\n\n      );\n  }\n\n  \n\n\n\n}\n","<main class=\"form-signin bg-light shadow p-3\">\n  <form *ngIf=\"!otpSended\" [formGroup]=\"form\" (submit)=\"submit()\">\n    <h5 class=\"h5 mb-3 fw-normal font-weight-bold\">Register With We<span class=\"text-success\">care</span></h5>\n    <hr>\n\n\n    <div class=\"form-group\">\n      <input formControlName=\"first_name\" [ngClass]=\"{'is-invalid':form.get('first_name').touched && form.get('first_name').invalid}\" type=\"input\" class=\"form-control\" placeholder=\"First Name\" required autocomplete=\"disabled\">\n      <div class=\"invalid-feedback\">\n        <div class=\"text-danger\">First name is required</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <input formControlName=\"lsst_name\" [ngClass]=\"{'is-invalid':form.get('lsst_name').touched && form.get('lsst_name').invalid}\" type=\"input\" class=\"form-control\" placeholder=\"Last Name\" required autocomplete=\"disabled\">\n      <div class=\"invalid-feedback\">\n        <div class=\"text-danger\">Last name is required</div>\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <input formControlName=\"username\" [ngClass]=\"{'is-invalid':form.get('username').touched && form.get('username').invalid}\" type=\"number\" class=\"form-control is-invalid\" placeholder=\"Mobile Number\" autocomplete=\"disabled\">\n      <div *ngIf=\"form.get('username').touched && form.get('username').invalid\" class=\"invalid-feedback\">\n        <div *ngIf=\"form.get('username').errors.required\" class=\"text-danger\">Mobile Number is required</div>\n        <div *ngIf=\"form.get('username').errors.pattern\" class=\"text-danger\">Mobile Number is Invalid</div>\n      </div>\n      \n    </div>\n    \n    <div class=\"form-group\">\n      <input formControlName=\"password\" [ngClass]=\"{'is-invalid':form.get('password').touched && form.get('password').invalid}\" type=\"password\" class=\"form-control\" placeholder=\"Password\" required autocomplete=\"disabled\">\n      <div class=\"invalid-feedback\" *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n        <div class=\"text-danger\" *ngIf=\"form.get('password').errors.required\">Password is required.</div>\n        <div class=\"text-danger\" *ngIf=\"form.get('password').errors.minlength\">Password must be at least 6 characters.</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <input formControlName=\"cpassword\" [ngClass]=\"{'is-invalid': (form.get('password').value != form.get('cpassword').value) && form.get('cpassword').dirty, 'is-valid': (form.get('password').value == form.get('cpassword').value) && form.get('cpassword').value!=''} \" type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" required autocomplete=\"disabled\">\n      <div class=\"invalid-feedback\">\n        <div class=\"text-danger\">Confirm Password doesn't match.</div>\n      </div>\n    </div>\n      \n    \n    <button class=\"w-100 btn btn-lg btn-primary\" [disabled]=\"!form.valid\" type=\"submit\" >{{btn_txt}}</button>\n  </form>\n\n  <div id=\"recaptcha-container\"></div>\n  <form *ngIf=\"otpSended\"  [formGroup]=\"form_verify\" (submit)=\"verifyLoginCode()\">  \n    <h6 class=\"h6 mb-3 fw-normal text-secondary\">We've sent an SMS with an activation code to your phone {{num}}</h6>\n    <hr>  \n    <div class=\"form-group\">\n      <input formControlName=\"otp\" [ngClass]=\"{'is-invalid':form_verify.get('otp').touched && form_verify.get('otp').invalid}\" type=\"input\" class=\"form-control is-invalid\" placeholder=\"Enter OTP\">\n      <div *ngIf=\"form_verify.get('otp').touched && form_verify.get('otp').invalid\" class=\"invalid-feedback\">\n        <div class=\"text-danger\">Please enter valid otp</div>\n      </div>\n      \n    </div>\n    <button class=\"w-100 btn btn-lg btn-success\" [disabled]=\"!form_verify.valid\">{{btn2_txt}}</button>\n\n    <button class=\"text-primary text-center w-100 mt-4\" (click)=\"change_state()\">Didn't get the code</button>\n\n  </form>\n</main>\n","<div id=\"stripes\">\n</div>\n\n{{message}}\n\n  <div class=\"main-home pt-5\">\n    <h1 class=\"w-100 text-center mt-5\"><b>Discover what's <strong class=\"text-danger text-nowrap\">Around You</strong></b></h1>\n    <br>\n\n\n  </div>\n\n  <div class=\"container\">\n    <div class=\"row cards \">\n      <div class=\"col-12 col-md-6 mb-3\">\n        <div class=\"card card2 card-large card-row-layout shadow\">\n          <a routerLink=\"/services\" class=\"\">\n            <div class=\"card-body\">\n              <p class=\"card-title h5 font-weight-bold text-center w-100 p-0 m-0 mb-3\">Find Covid-19 Service</p>\n              <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            </div>\n        </a>\n        </div>\n      </div>\n \n      <div class=\"col-12 col-md-6 mb-3\">\n        <div class=\"card card2 card-large card-row-layout shadow\">\n          <a routerLink=\"/requests\" class=\"\">\n            <div class=\"card-body\">\n              <p class=\"card-title h5 font-weight-bold text-center w-100 p-0 m-0 mb-3\">Request For A Help</p>\n              <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            </div>\n        </a>\n        </div>\n      </div>\n      <div class=\"col-12 col-md-12 mb-3\">\n        <div class=\"card card2 card-large card-row-layout shadow\">\n          <a href=\"#\" class=\"\">\n            <div class=\"card-body\">\n              <p class=\"card-title h5 font-weight-bold text-center w-100 p-0 m-0 mb-3\">Add A Service Provider</p>\n              <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n            </div>\n        </a>\n        </div>\n      </div>\n \n\n\n    </div>\n  </div>\n\n  <div class=\"container bg-white border-top p-0 shadow mt-4 pb-3\">\n    <div class=\"text-center pt-3\">\n        <h3 class=\"font-weight-bold\"> Available Services for Covid-19</h3>\n    </div>\n    <div class=\"Grid m-1\"> \n        <a *ngFor=\"let service of services\" class=\"hover-red m-1 p-2 h-100 text-center shadow-sm bg-white\" :href=\"`retail/${row.category_slug}`\" style=\"margin: 2px;\">\n          <img :src=\"`/img/color/retail/${row.category_slug}.png`\" class=\"Grid-img\">\n          <b>\n            <strong> {{service.service}}</strong>\n          </b>\n        </a> \n    </div>\n  </div> \n  \n  \n \n\n\n\n\n\n\n\n\n\n\n\n\n  <div class=\"container p-0 mt-5 border-top mb-3 bg-white shadow\">\n\n    <div class=\"text-center m-3\">\n        <h2 class=\"font-weight-bold\"> <span class=\"text-danger\">Why </span>You Are Here?</h2>\n    </div>\n   \n    <div class=\"why-us-banner\">\n      \n    <div class=\"flex-item d-flex flex-column justify-content-center align-items-center\">\n        <img src=\"/img/world.png\" style=\"width: 50px;\">\n        <span class=\"text\">Worldwide Services</span>\n      </div>\n      \n      <div class=\"flex-item d-flex flex-column justify-content-center align-items-center\">\n        <img src=\"/img/home.png\" style=\"width: 50px;\">\n        <span class=\"text\">Secure From Home</span>\n      </div>\n      \n      <div class=\"flex-item d-flex flex-column justify-content-center align-items-center\">\n        <img src=\"/img/b-r-7.png\" style=\"width: 50px;\">\n        <span class=\"text\">24/7 Support</span>\n      </div>\n      \n      <div class=\"flex-item d-flex flex-column justify-content-center align-items-center\">\n        <img src=\"/img/b-r-8.png\" style=\"width: 50px;\">\n        <span class=\"text\">2,000+ User</span>\n      </div>\n    </div>\n  </div>\n ","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Emitters} from '../emitters/emitters';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  message = '';\n  services:any\n\n \n  constructor(\n    private api:ApiService,\n    private http: HttpClient\n\n  ) { }\n\n  ngOnInit(): void {\n    this.getServices();\n  }\n\n \n\n  getServices = () => {\n    this.api.getAllServices().subscribe(\n      data => {\n        this.services = data;\n        // console.log(data);\n      },\n      error => {\n        console.log(\"error\");\n      },\n    );\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyAyPuMQ5uN-A26rOR2_DJ9I4PL9k31uFUs\",\n    authDomain: \"angular-f4da8.firebaseapp.com\",\n    projectId: \"angular-f4da8\",\n    storageBucket: \"angular-f4da8.appspot.com\",\n    messagingSenderId: \"244455526504\",\n    appId: \"1:244455526504:web:acedd4845145fba074abdd\",\n    measurementId: \"G-X4EWVLVR21\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-covidsupport',\n  templateUrl: './covidsupport.component.html',\n  styleUrls: ['./covidsupport.component.css']\n})\nexport class CovidsupportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <mat-toolbar color=\"primary\">\n        <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <span>My App</span>\n        <span class=\"example-spacer\"></span>\n        <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n          <mat-icon>favorite</mat-icon>\n        </button>\n        <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n          <mat-icon>share</mat-icon>\n        </button>\n      </mat-toolbar>\n      \n\n    \n  ","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport * as StateData from '../districts.json';  \n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.css']\n})\nexport class ServicesComponent implements OnInit {\n\n\n  constructor(private activatedRoute: ActivatedRoute , private api:ApiService) { }\n  order: any\n  reverse: any\n  donners: any\n\n  services: any\n  categories: any\n\n  service: any\n  category: any\n  verified: any\n\n  state: any\n  district:any\n  city:any\n  \n  states :any = (StateData as any).default\n\n  districts = new Array\n\n\n  ngOnInit(): void {\n    this.getDonners(); \n    this.getServices();\n    \n  }\n  getDonners = () => {\n    this.api.getAllDonners(this.service,this.category,this.verified,this.state,this.district,this.city).subscribe(\n      data => {\n        this.donners = data;\n        // console.log(data);\n      },\n      error => {\n        // console.log(\"error\");\n      }\n    );\n\n  }\n \n  getServices = () => {\n    this.api.getAllServices().subscribe(\n      data => {\n        this.services = data;\n        // console.log(data);\n      },\n      error => {\n        // console.log(\"error\");\n      }\n    );\n  }\n\n  onChangeService(service:any) {\n    if(service.value)\n    {\n      this.category = '';\n      this.categories=this.services[service.value].categories;\n      this.service = this.services[service.value].id;\n        \n    }\n    else{\n      this.service = '';\n      this.category = '';\n      this.categories = []\n    }\n    this.getDonners();\n  }\n\n  onChangeState(state:any) {\n    if(state.value)\n    {\n      this.district = ''\n      this.state = this.states[state.value].name;\n      this.districts = []\n      for(let i in this.states[state.value].districts)\n      {\n        this.districts.push(this.states[state.value].districts[i]);\n      }\n    }\n    else{\n      this.state = ''\n      this.district = ''\n      this.districts = []\n    }\n    this.getDonners();\n  }\n\n  onChangeDistrict(district:any) {\n   \n    this.district = district.value;\n    \n    this.getDonners();\n  }\n\n\n  \n  onChangeCategory(category:any) {\n    // if(service.value)\n    //   this.categories=this.categories[service.value].categories;\n    this.category = category.value;\n    // this.cityInfo=this.stateInfo[0].Cities;\n    // console.log(category.value);\n    this.getDonners();\n  }\n\n  \n\n  upvoteDonner = (donner:any) => {\n    \n    this.api.upvoteDonner(donner).subscribe(\n      data => {\n        // this.getMovies();\n      },\n      error => {\n        // console.log(\"error\");\n      }\n    );\n\n  }\n\n\n\n}\n","\n\n<div class=\"container bg-light shadow p-3\">\n  <h3 class=\"mt-3 text-center text-success font-weight-bold\">Service providers for Covid-19</h3>\n\n\n    <div class=\"row d-flex justify-content-center\">\n   \n \n      <div class=\"col-12 col-md-4\">\n        <div class=\"form-group\"> \n          <select class=\"form-control\" (change)=\"onChangeService($event.target)\">\n            <option selected value=\"\">Select Service</option>\n            <option *ngFor=\"let service of services; let i = index\" value=\"{{i}}\">{{service.service}}</option>\n          </select>  \n        </div>\n      </div>\n\n      <div class=\"col-12 col-md-4\" *ngIf=\"service\">\n        <div class=\"form-group\"> \n            <select class=\"form-control\" (change)=\"onChangeCategory($event.target)\">\n              <option selected value=\"\">Select Category</option>\n              <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.category}}</option>\n            </select>  \n        </div>\n      </div>\n  \n      <div class=\"col-12 col-md-4\">\n        <div class=\"form-group\">\n            <select class=\"form-control\" (change)=\"onChangeState($event.target)\">\n              <option selected value=\"\">Select State</option>\n              <option *ngFor=\"let state of states; let k = index\" value=\"{{k}}\">{{state.name}}</option>\n            </select>  \n        </div>\n      </div>\n      <div class=\"col-12 col-md-4\" *ngIf=\"state\">\n        <div class=\"form-group\">\n            <select class=\"form-control\" (change)=\"onChangeDistrict($event.target)\">\n              <option selected value=\"\">Select District</option>\n              <option *ngFor=\"let district of districts; let k = index\" value=\"{{district}}\">{{district}}</option>\n            </select>  \n        </div>\n      </div>     \n      \n      \n  \n  </div>    \n\n\n\n\n    <hr> \n    <div class=\"row cards \">\n      <div class=\"col-12 col-md-6 mb-3\" *ngFor=\"let donner of donners\"  >\n        <div class=\"card card-large card-row-layout shadow-sm\" [ngClass]=\"{'border border-danger': donner.verified==0, 'border border-success': donner.verified==1}\">\n          <a routerLink=\"/services\" class=\"\">\n            <div class=\"card-body\">\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Provider : \n                </span>\n                <span>\n                  {{donner.provider}}\n                </span>\n              </p>\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Service : \n                </span>\n                <span>\n                  {{donner.this_service}}\n                </span>\n              </p>\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Category : \n                </span>\n                <span>\n                  {{donner.this_category}}\n                </span>\n                <span *ngIf=\"!donner.category\">\n                  Not available\n                </span>\n              </p>\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Address : \n                </span>\n                <span *ngIf=\"donner.city\" class=\"pr-1\">\n                  {{donner.city}}, \n                </span> \n                {{donner.district}}, {{donner.state}} \n              </p>\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Mobile No : \n                </span>\n                <span>\n                  {{donner.contact}}\n                </span>\n              </p>\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Updated : \n                </span>\n                <span>\n                  {{donner.gap}}\n                </span>\n              </p>\n              <p class=\"card-text h6 d-flex\">\n                <span class=\"w-25 font-weight-bold\">\n                  Details : \n                </span>\n                <span>\n                  {{donner.about}}\n                </span>\n              </p>\n              \n\n            </div>\n            <div class=\"card-footer d-flex justify-content-between align-items-center\" style=\"font-size: 14px;\">\n              <div>\n                <span>Maintained by : {{donner.maintained_by_first_name}} {{donner.maintained_by_last_name}}</span>\n                <!-- <button (click)=\"upvoteDonner(donner)\" class=\"text-success\"><i class=\"mr-3 fa fa-hand-o-up\" style=\"font-size: 22px;cursor:pointer\"></i>{{donner.upvote}}</button> -->\n                <!-- <button class=\"text-danger\"><i class=\"mr-3 fa fa-hand-o-down\" style=\"font-size: 22px;cursor:pointer\"></i>{{donner.upvote}}</button> -->\n              </div>\n              <div class=\"text-right\">\n                <span *ngIf=\"donner.verified\" class=\"text-success\">Verified</span>\n                <span *ngIf=\"!donner.verified\" class=\"text-danger\">Not verified</span>\n              </div>\n            </div>\n        </a>\n        </div>\n      </div>\n\n      \n\n\n\n    </div> \n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'angular-auth';\n\n  ngOnInit(): void {\n    let loader = new Loader({\n      apiKey: 'AIzaSyBgrXKbSsFfXdyJYE4YRCqRnah5FM59tfs'\n    })\n\n    loader.load().then(()=> {\n      new google.maps.Map(document.getElementById(\"map\"),{\n        center: { lat: 51, lng: 6},\n        zoom: 6\n      })\n    })\n\n  }\n  \n}\n","<app-nav></app-nav>\n<div class=\"mt-5 pt-4\">\n\n    <router-outlet></router-outlet>\n\n</div>\n\n<!-- <div class=\"full\" id=\"map\">\n\n</div> -->","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport * as StateData from '../districts.json';  \nimport { ApiService } from '../api.service';\nimport Swal from 'sweetalert2'\n\n\n@Component({\n  selector: 'app-contribute',\n  templateUrl: './contribute.component.html',\n  styleUrls: ['./contribute.component.css']\n})\n\n// this.form = this.formBuilder.group({\n//   provider: '',\n//   contact: '',\n//   about: '',\n//   service: '',\n//   category: '',\n//   state: '',\n//   district: '',\n//   user: ''\n// });\nexport class ContributeComponent implements OnInit {\n  form = new FormGroup({\n    provider : new FormControl('', [Validators.required, ]),\n    contact : new FormControl('', [Validators.required, Validators.pattern(\"[0-9 ]{10}\")]),\n    service : new FormControl('', [Validators.required, ]),\n    category : new FormControl(''),\n    state : new FormControl('', [Validators.required, ]),\n    district : new FormControl('', [Validators.required, ]),\n    user : new FormControl('', [Validators.required, ]),\n    about : new FormControl(''),\n  });\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private api:ApiService\n  ) {  }\n\n\n// {\n//     \"provider\": \"sadda\",\n//     \"contact\": 5,\n//     \"about\": \"asda\",\n//     \"state\": \"West Bengal\",\n//     \"district\": \"Hooghly\",\n//     \"service\": 2,\n//     \"category\": 1\n//     \"user\": 2,\n// } \n\n\nservices: any\ncategories: any\n\nservice: any\ncategory: any\nverified: any\n\n \n\nstates :any = (StateData as any).default\n\ndistricts = new Array\n\nthisstate : any\n\n\n\n\n  ngOnInit(): void {\n\n    this.getServices();\n    this.getAccount();\n\n  }\n\n  submit(): void {\n    console.log(this.form.getRawValue());\n    this.http.post('http://localhost:8000/api/providers/', this.form.getRawValue(), {\n      withCredentials: true\n    }).subscribe(() =>\n     this.router.navigate(['services'])\n     );\n  }\n\n  getAccount = () => {\n    this.http.get('http://localhost:8000/auth/user', {withCredentials: true}).subscribe(\n      (res: any) => {\n        this.form.controls.user.setValue(res.id);\n      },\n      err => {\n        Swal.fire({\n          title: 'You are not logged in',\n          text: 'You need to login first to add a service provider!',\n          icon: 'warning',\n          // showCancelButton: true,\n          // confirmButtonText: 'Okey',\n          // cancelButtonText: 'No, keep it'\n        })\n        this.router.navigate(['login'])\n\n      }\n    );\n\n    \n  }\n\n \n  getServices = () => {\n    this.api.getAllServices().subscribe(\n      data => {\n        this.services = data;\n      },\n      error => {\n      }\n    );\n  }\n\n\n\n\n  onChangeService(service:any) {\n    if(service.value)\n    {\n\n      var nm=service.value\n      nm++;\n      this.form.controls.service.setValue(nm); \n\n      this.form.controls.category.setValue('');\n      this.categories=this.services[service.value].categories;\n        \n    }\n    else{\n      this.categories = []\n    } \n  }\n\n\n\n  onChangeCategory(category:any) {\n    this.form.controls.category.setValue(\n      category.value\n    ); \n  }\n\n\n  onChangeState(state:any) {\n    if(state.value)\n    {\n      this.form.controls.district.setValue('');\n      this.districts = []\n\n      for(let i in this.states[state.value].districts)\n      {\n        this.districts.push(this.states[state.value].districts[i]);\n      } \n\n      this.form.controls.state.setValue(\n        this.states[state.value].name\n      ); \n    }\n    else{\n      this.districts = []\n    } \n  }\n\n  onChangeDistrict(district:any) {\n   \n      this.form.controls.district.setValue(\n        district.value\n      ); \n  }\n\n\n\n\n\n\n\n}\n","\n<main class=\"container\">\n    <form [formGroup]=\"form\" (submit)=\"submit()\" class=\"bg-light p-3 shadow\">\n      <h5 class=\"h5 mb-3 fw-normal\">Add a Service Provider</h5>\n        <hr>\n        \n<!-- \n        <div class=\"form-group\">\n            <input formControlName=\"first_name\" [ngClass]=\"{'is-invalid':form.get('first_name').touched && form.get('first_name').invalid}\" type=\"input\" class=\"form-control\" placeholder=\"First Name\" required>\n            <div class=\"invalid-feedback\">\n              <div class=\"text-danger\">First name is required</div>\n            </div>\n        </div> -->\n\n          \n        <div class=\"row \">\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <input formControlName=\"provider\" [ngClass]=\"{'is-invalid':form.get('provider').touched && form.get('provider').invalid}\" type=\"input\" class=\"form-control\" placeholder=\"Service provider name\" required>\n                <div class=\"invalid-feedback\">\n                  <div class=\"text-danger\">First name is required</div>\n                </div>\n            </div>\n\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <input formControlName=\"contact\" [ngClass]=\"{'is-invalid':form.get('contact').touched && form.get('contact').invalid}\" type=\"number\" class=\"form-control is-invalid\" placeholder=\"Service Provider Number\">\n                <div *ngIf=\"form.get('contact').touched && form.get('contact').invalid\" class=\"invalid-feedback\">\n                  <div *ngIf=\"form.get('contact').errors.required\" class=\"text-danger\">Service Provider Number is required</div>\n                  <div *ngIf=\"form.get('contact').errors.pattern\" class=\"text-danger\">Service Provider Number is Invalid</div>\n                </div>\n                \n            </div>\n\n        </div>\n      \n\n        <div class=\"row \">\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">Service</span>\n                </div>\n                <select (change)=\"onChangeService($event.target)\" class=\"custom-select\">\n                    <option selected disabled>Select Service</option>\n                    <option *ngFor=\"let service of services; let i = index\" value=\"{{i}}\">{{service.service}}</option>\n                </select>\n            </div>\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">Category</span>\n                </div>\n                <select (change)=\"onChangeCategory($event.target)\" class=\"custom-select\">\n                    <option selected disabled>Select Category</option>\n                    <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.category}}</option>\n                    <option value=\"\">Others</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row \">\n        <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">State</span>\n                </div>\n                <select (change)=\"onChangeState($event.target)\" class=\"custom-select\">\n                    <option selected disabled>Select State or UT</option>\n                    <option *ngFor=\"let state of states; let k = index\" value=\"{{k}}\">{{state.name}}</option>\n                </select>\n            </div>\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">District</span>\n                </div>\n                <select (change)=\"onChangeDistrict($event.target)\" class=\"custom-select\">\n                    <option selected value=\"\">Select district</option>\n                    <option *ngFor=\"let district of districts; let k = index\" value=\"{{district}}\">{{district}}</option>\n                </select>\n            </div>\n        </div>\n      \n      \n\n\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">Details</span>\n        </div>\n        <textarea formControlName=\"about\" class=\"form-control\" aria-label=\"With textarea\"></textarea>\n      </div>\n      <br>\n      <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Post</button>\n    </form>\n  </main>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {NavComponent} from './nav/nav.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { ServicesComponent } from './services/services.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { ContributeComponent } from './contribute/contribute.component';\nimport { CovidsupportComponent } from './covidsupport/covidsupport.component';\n\nimport { MaterialModule } from \"./material/material.module\";\nimport { AskforhelpComponent } from './askforhelp/askforhelp.component';\n\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    HomeComponent,\n    NavComponent,\n    ServicesComponent,\n    RequestsComponent,\n    ContributeComponent,\n    CovidsupportComponent,\n    AskforhelpComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule, \n    MaterialModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule, // imports firebase/auth, only needed for auth features\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatIconModule\n  ],\n  exports: [\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatIconModule\n\n  ]\n})\nexport class MaterialModule { }\n","import {EventEmitter} from '@angular/core';\n\nexport class Emitters {\n  static authEmitter = new EventEmitter<boolean>();\n}\n","import {Component, OnInit, ViewChild, ElementRef} from '@angular/core';\nimport {Emitters} from '../emitters/emitters';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  authenticated = false;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.getAccount();\n    Emitters.authEmitter.subscribe(\n      (auth: boolean) => {\n        this.authenticated = auth;\n      }\n    );\n  }\n\n  getAccount = () => {\n    this.http.get('http://localhost:8000/auth/user', {withCredentials: true}).subscribe(\n      (res: any) => {\n        // this.message = `Hi ${res.username}`;\n        Emitters.authEmitter.emit(true);\n      },\n      err => {\n        // this.message = 'You are not logged in';\n        Emitters.authEmitter.emit(false);\n      }\n    );\n  }\n\n\n  @ViewChild('navbarToggler') navbarToggler:ElementRef;\n  logout(): void {\n    this.http.post('http://localhost:8000/auth/logout', {}, {withCredentials: true})\n      .subscribe(() => this.authenticated = false);\n  }\n  navBarTogglerIsVisible() {\n    return this.navbarToggler.nativeElement.offsetParent !== null;\n  }\n  collapseNav() {\n    if (this.navBarTogglerIsVisible()) {\n      this.navbarToggler.nativeElement.click();\n    }\n  }\n\n\n}\n","\n<nav class=\"navbar navbar-expand-md navbar-light fixed-top bg-light shadow\">\n  <a  class=\"navbar-brand\"  routerLink=\"/\">We Care</a>\n  <button #navbarToggler class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div (click)=\"collapseNav()\" class=\"navbar-collapse collapse\" id=\"navbarCollapse\">\n    <ul class=\"navbar-nav mr-auto\">  \n    </ul>   \n\n    <ul class=\"navbar-nav\">   \n \n      <li class=\"nav-item\">\n        <a routerLink=\"/services\" class=\"nav-link\">Services</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"/requests\" class=\"nav-link\">Requests</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a routerLink=\"/contribute\" class=\"nav-link\">Contribute</a>\n      </li>\n\n      <li class=\"nav-item\">\n        <a routerLink=\"/account\" class=\"nav-link\">Account</a>\n      </li>      \n      <li class=\"nav-item\" *ngIf=\"!authenticated\">\n        <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!authenticated\">\n        <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"authenticated\">\n        <a routerLink=\"/login\" class=\"nav-link\" (click)=\"logout()\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport * as StateData from '../districts.json';  \nimport { ApiService } from '../api.service';\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-askforhelp',\n  templateUrl: './askforhelp.component.html',\n  styleUrls: ['./askforhelp.component.css']\n})\nexport class AskforhelpComponent implements OnInit {\n  form = new FormGroup({\n    service : new FormControl('', [Validators.required, ]),\n    category : new FormControl(''),\n    state : new FormControl('', [Validators.required, ]),\n    district : new FormControl('', [Validators.required, ]),\n    user : new FormControl('', [Validators.required, ]),\n    about : new FormControl(''),\n  });\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private api:ApiService\n  ) {  }\n\n\n// {\n//     \"provider\": \"sadda\",\n//     \"contact\": 5,\n//     \"about\": \"asda\",\n//     \"state\": \"West Bengal\",\n//     \"district\": \"Hooghly\",\n//     \"service\": 2,\n//     \"category\": 1\n//     \"user\": 2,\n// } \n\n\nservices: any\ncategories: any\n\nservice: any\ncategory: any\nverified: any\n\n \n\nstates :any = (StateData as any).default\n\ndistricts = new Array\n\nthisstate : any\n\n\n\n\n  ngOnInit(): void {\n\n    this.getServices();\n    this.getAccount();\n\n  }\n\n  submit(): void {\n    console.log(this.form.getRawValue());\n    this.http.post('http://localhost:8000/api/requests/', this.form.getRawValue(), {\n      withCredentials: true\n    }).subscribe(() =>\n     this.router.navigate(['requests'])\n     );\n  }\n\n  getAccount = () => {\n    this.http.get('http://localhost:8000/auth/user', {withCredentials: true}).subscribe(\n      (res: any) => {\n        this.form.controls.user.setValue(res.id);\n      },\n      err => {\n        Swal.fire({\n          title: 'You are not logged in',\n          text: 'You need to login first to add a service provider!',\n          icon: 'warning',\n          // showCancelButton: true,\n          // confirmButtonText: 'Okey',\n          // cancelButtonText: 'No, keep it'\n        })\n        this.router.navigate(['login'])\n\n      }\n    );\n\n    \n  }\n\n \n  getServices = () => {\n    this.api.getAllServices().subscribe(\n      data => {\n        this.services = data;\n      },\n      error => {\n      }\n    );\n  }\n\n\n\n\n  onChangeService(service:any) {\n    if(service.value)\n    {\n\n      var nm=service.value\n      nm++;\n      this.form.controls.service.setValue(nm); \n\n      this.form.controls.category.setValue('');\n      this.categories=this.services[service.value].categories;\n        \n    }\n    else{\n      this.categories = []\n    } \n  }\n\n\n\n  onChangeCategory(category:any) {\n    this.form.controls.category.setValue(\n      category.value\n    ); \n  }\n\n\n  onChangeState(state:any) {\n    if(state.value)\n    {\n      this.form.controls.district.setValue('');\n      this.districts = []\n\n      for(let i in this.states[state.value].districts)\n      {\n        this.districts.push(this.states[state.value].districts[i]);\n      } \n\n      this.form.controls.state.setValue(\n        this.states[state.value].name\n      ); \n    }\n    else{\n      this.districts = []\n    } \n  }\n\n  onChangeDistrict(district:any) {\n   \n      this.form.controls.district.setValue(\n        district.value\n      ); \n  }\n\n\n\n\n\n\n\n}\n","\n<main class=\"container\">\n \n    <form [formGroup]=\"form\" (submit)=\"submit()\" class=\"bg-light p-3 shadow mb-4\">\n      <h5 class=\"h5 mb-3 fw-normal\">Please fill the form to request</h5>\n        <hr>\n \n     \n\n        <div class=\"row \">\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">Service</span>\n                </div>\n                <select (change)=\"onChangeService($event.target)\" class=\"custom-select\">\n                    <option selected disabled>Select Service you need</option>\n                    <option *ngFor=\"let service of services; let i = index\" value=\"{{i}}\">{{service.service}}</option>\n                </select>\n            </div>\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">Category</span>\n                </div>\n                <select (change)=\"onChangeCategory($event.target)\" class=\"custom-select\">\n                    <option selected disabled>Select Category</option>\n                    <option *ngFor=\"let category of categories\" value=\"{{category.id}}\">{{category.category}}</option>\n                    <option value=\"\">Others</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"row \">\n        <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">State</span>\n                </div>\n                <select (change)=\"onChangeState($event.target)\" class=\"custom-select\">\n                    <option selected disabled>Select your State or UT</option>\n                    <option *ngFor=\"let state of states; let k = index\" value=\"{{k}}\">{{state.name}}</option>\n                </select>\n            </div>\n            <div class=\"input-group col-12 col-md-6 mb-3\"> \n                <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" id=\"basic-addon1\">District</span>\n                </div>\n                <select (change)=\"onChangeDistrict($event.target)\" class=\"custom-select\">\n                    <option selected value=\"\">Select your district</option>\n                    <option *ngFor=\"let district of districts; let k = index\" value=\"{{district}}\">{{district}}</option>\n                </select>\n            </div>\n        </div>\n      \n  \n\n\n      <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">Details</span>\n        </div>\n        <textarea formControlName=\"about\" class=\"form-control\" aria-label=\"With textarea\"></textarea>\n      </div>\n      <small class=\"help-text\">**Please add some details about your requirements.</small>\n\n      <br><br>\n      <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Send Request</button>\n\n \n  \n    </form>\n\n \n  </main>\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomeComponent} from './home/home.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport { ServicesComponent } from './services/services.component';\nimport { RequestsComponent } from './requests/requests.component';\nimport { ContributeComponent } from './contribute/contribute.component';\nimport { CovidsupportComponent } from './covidsupport/covidsupport.component';\nimport { AskforhelpComponent } from \"./askforhelp/askforhelp.component\";\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'covidsupport', component: CovidsupportComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'services', component: ServicesComponent},\n  {path: 'requests', component: RequestsComponent},\n  {path: 'contribute', component: ContributeComponent},\n  {path: 'request_for_help', component: AskforhelpComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl, Validators} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Emitters } from '../emitters/emitters';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form = new FormGroup({\n    username : new FormControl('', [Validators.required, Validators.pattern(\"[0-9 ]{10}\")]),\n    password : new FormControl('', [Validators.required, Validators.minLength(6) ]),\n\n  });\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private router: Router\n  ) {  }\n\n  ngOnInit(): void {\n    \n  }\n\n  submit(): void {\n    this.http.post('https://django-backend-rest-001.herokuapp.com/auth/login', this.form.getRawValue(), {\n      withCredentials: true\n    }).subscribe(\n      (res: any) => {\n        Swal.fire({\n          title: '',\n          text: 'Login Successfull.',\n          icon: 'success',\n          // showConfirmButton: false,\n          // showCancelButton: true,\n          // confirmButtonText: 'Okey',\n          // cancelButtonText: 'No, keep it'\n        })\n        Emitters.authEmitter.emit(true);\n        this.router.navigate(['/'])\n      },\n      err => {\n        \n          \n        Swal.fire({\n          title: '',\n          text: 'Please Enter All Correct Details.',\n          icon: 'warning',\n          // showConfirmButton: false,\n          // showCancelButton: true,\n          // confirmButtonText: 'Okey',\n          // cancelButtonText: 'No, keep it'\n        })\n        \n      }\n    );\n    \n  }\n}\n","\n<main class=\"form-signin bg-light shadow p-3\">\n  <form [formGroup]=\"form\" (submit)=\"submit()\">\n    <h5 class=\"h5 mb-3 fw-normal font-weight-bold\">Login &  Welcome to We<span class=\"text-success\">care</span></h5>\n    <hr>\n    <div class=\"form-group\">\n      <input formControlName=\"username\" [ngClass]=\"{'is-invalid':form.get('username').touched && form.get('username').invalid}\" type=\"number\" class=\"form-control is-invalid\" placeholder=\"Mobile Number\">\n      <div *ngIf=\"form.get('username').touched && form.get('username').invalid\" class=\"invalid-feedback\">\n        <div *ngIf=\"form.get('username').errors.required\" class=\"text-danger\">Mobile Number is required</div>\n        <div *ngIf=\"form.get('username').errors.pattern\" class=\"text-danger\">Mobile Number is Invalid</div>\n      </div>\n      \n    </div>\n    <div class=\"form-group\">\n      <input formControlName=\"password\" [ngClass]=\"{'is-invalid':form.get('password').touched && form.get('password').invalid}\" type=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n      <div class=\"invalid-feedback\" *ngIf=\"form.get('password').touched && form.get('password').invalid\">\n        <div class=\"text-danger\" *ngIf=\"form.get('password').errors.required\">Password is required.</div>\n        <div class=\"text-danger\" *ngIf=\"form.get('password').errors.minlength\">Password must be at least 6 characters.</div>\n      </div>\n    </div>\n \n\n    <button class=\"w-100 btn btn-lg btn-primary\" [disabled]=\"!form.valid\" type=\"submit\">Sign in</button>\n  </form>\n</main>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs'; \nimport { Router } from '@angular/router'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  baseurl = \"https://django-backend-rest-001.herokuapp.com\";\n  httpHeaders = new HttpHeaders({'Content-Type':  'application/json'});\n\n\n  get windowRef() {\n    return window\n  }\n\n  constructor(\n    private http: HttpClient, \n    private router: Router\n    \n    ) { }\n\n\n\n  getAllServices(): Observable<any>{\n    return this.http.get(this.baseurl + '/api/services/',\n    {headers: this.httpHeaders})\n        \n  }\n\n  getAllDonners(service:any,category:any, verified:any, state:any, district:any, city:any): Observable<any>{\n    if(service==null)\n    service=''\n    if(category==null)\n    category=''\n    if(verified==null)\n    verified=''\n    if(state==null)\n    state=''\n    if(district==null)\n    district=''\n    if(city==null)\n    city=''\n    \n    return this.http.get(this.baseurl + '/api/providers/?service='+service+'&category='+ category+'&verified='+verified+'&state='+state+'&district='+district+'&city='+city,\n    {headers: this.httpHeaders})\n  }\n\n\n  getAllRequests(service:any,category:any, verified:any, state:any, district:any, city:any): Observable<any>{\n    if(service==null)\n    service=''\n    if(category==null)\n    category=''\n    if(verified==null)\n    verified=''\n    if(state==null)\n    state=''\n    if(district==null)\n    district=''\n    if(city==null)\n    city=''\n    \n    return this.http.get(this.baseurl + '/api/requests/?service='+service+'&category='+ category+'&verified='+verified+'&state='+state+'&district='+district+'&city='+city,\n    {headers: this.httpHeaders})\n  }\n\n\n\n\n\n  upvoteDonner(recipient: any): Observable<any>{\n    recipient.upvote++;\n    const body = { upvote : recipient.upvote };\n    return this.http.patch(this.baseurl + '/api/providers/' + recipient.id + '/', body,\n    {headers: this.httpHeaders})\n  }\n\n\n  upvoteRequest(recipient: any): Observable<any>{\n    recipient.upvote++;\n    const body = { upvote : recipient.upvote };\n    return this.http.patch(this.baseurl + '/api/providers/' + recipient.id + '/', body,\n    {headers: this.httpHeaders})\n  }\n\n\n\n\n\n\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}